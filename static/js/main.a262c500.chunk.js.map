{"version":3,"sources":["components/Carousel.js","components/CarouselSettings.jsx","App.js","index.js"],"names":["Carousel","state","currentIdx","imageCount","nextButtonDisabled","prevButtonDisabled","updateButtonsState","frameSize","props","setState","slide","direction","step","directedStep","images","this","length","prevProps","prevState","itemWidth","animationDuration","carouselWidth","className","type","onClick","disabled","style","width","map","image","key","replace","listItemStyle","transitionDuration","transform","imgStyle","src","alt","React","Component","defaultProps","CarouselSettings","onChange","htmlFor","id","name","value","min","max","App","handleChange","e","newValue","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a262c500.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Carousel.scss';\n\nclass Carousel extends React.Component {\n  state = {\n    currentIdx: 0,\n    imageCount: 0,\n    nextButtonDisabled: false,\n    prevButtonDisabled: true,\n  };\n\n  componentDidMount() {\n    const { images } = this.props;\n\n    this.setState({\n      imageCount: images.length,\n      prevButtonDisabled: true,\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.frameSize !== this.props.frameSize) {\n      this.updateButtonsState();\n    }\n  }\n\n  updateButtonsState = () => {\n    const { frameSize } = this.props;\n\n    this.setState((state) => {\n      const nextButtonDisabled = state.currentIdx === (\n        state.imageCount - frameSize\n      );\n      const prevButtonDisabled = state.currentIdx <= 0;\n\n      return {\n        nextButtonDisabled,\n        prevButtonDisabled,\n      };\n    });\n  };\n\n  slide = (direction) => {\n    const { step, frameSize } = this.props;\n    const directedStep = step * direction;\n\n    this.setState((state) => {\n      let currentIdx = state.currentIdx + directedStep;\n\n      if (currentIdx >= (state.imageCount - frameSize)) {\n        currentIdx = state.imageCount - frameSize;\n      } else if (currentIdx < 0) {\n        currentIdx = 0;\n      }\n\n      return { currentIdx };\n    });\n\n    this.updateButtonsState();\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      animationDuration,\n    } = this.props;\n\n    const {\n      currentIdx,\n      nextButtonDisabled,\n      prevButtonDisabled,\n    } = this.state;\n\n    const carouselWidth = itemWidth * (\n      images.length < frameSize ? images.length : frameSize\n    );\n\n    return (\n      <div className=\"CarouselContainer\">\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          onClick={() => this.slide(-1)}\n          disabled={prevButtonDisabled}\n        >\n          Prev\n        </button>\n\n        <div className=\"Carousel\" style={{ width: carouselWidth }}>\n          <ul\n            className=\"Carousel__list\"\n          >\n            {\n              images.map((image) => {\n                const key = +image.replace(/\\D/g, '');\n                const listItemStyle = {\n                  transitionDuration: `${animationDuration}ms`,\n                  transform: `translateX(-${currentIdx * itemWidth}px)`,\n                };\n                const imgStyle = {\n                  width: `${itemWidth}px`,\n                };\n\n                return (\n                  <li\n                    key={key}\n                    className=\"Carousel__item\"\n                    style={listItemStyle}\n                  >\n                    <img\n                      className=\"Carousel__image\"\n                      src={image}\n                      alt={key}\n                      style={imgStyle}\n                    />\n                  </li>\n                );\n              })\n            }\n          </ul>\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          onClick={() => this.slide(1)}\n          disabled={nextButtonDisabled}\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n  itemWidth: PropTypes.number,\n  frameSize: PropTypes.number,\n  step: PropTypes.number,\n  animationDuration: PropTypes.number,\n};\n\nCarousel.defaultProps = {\n  itemWidth: 130,\n  frameSize: 3,\n  step: 3,\n  animationDuration: 1000,\n};\n\nexport default Carousel;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const CarouselSettings = ({\n  onChange, step, frameSize, itemWidth, animationDuration,\n}) => (\n  <form className=\"App__form\">\n    <div className=\"App__form-field\">\n      <label htmlFor=\"step\">Step</label>\n      <input\n        type=\"number\"\n        id=\"step\"\n        name=\"step\"\n        value={step}\n        min=\"1\"\n        max=\"10\"\n        onChange={onChange}\n      />\n    </div>\n\n    <div className=\"App__form-field\">\n      <label htmlFor=\"frameSize\">Frame Size</label>\n      <input\n        type=\"number\"\n        id=\"frameSize\"\n        name=\"frameSize\"\n        value={frameSize}\n        min=\"1\"\n        max=\"10\"\n        onChange={onChange}\n      />\n    </div>\n\n    <div className=\"App__form-field\">\n      <label htmlFor=\"itemWidth\">Item Width</label>\n      <input\n        type=\"number\"\n        id=\"itemWidth\"\n        name=\"itemWidth\"\n        value={itemWidth}\n        min=\"30\"\n        max=\"300\"\n        onChange={onChange}\n      />\n    </div>\n\n    <div className=\"App__form-field\">\n      <label htmlFor=\"animationDuration\">Animation Duration</label>\n      <input\n        type=\"number\"\n        name=\"animationDuration\"\n        id=\"animationDuration\"\n        value={animationDuration}\n        min=\"0\"\n        max=\"3000\"\n        onChange={onChange}\n      />\n    </div>\n  </form>\n);\n\nCarouselSettings.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  itemWidth: PropTypes.number,\n  frameSize: PropTypes.number,\n  step: PropTypes.number,\n  animationDuration: PropTypes.number,\n};\n\nCarouselSettings.defaultProps = {\n  itemWidth: 130,\n  frameSize: 3,\n  step: 3,\n  animationDuration: 1000,\n};\n","import React from 'react';\nimport './App.scss';\n\nimport Carousel from './components/Carousel';\nimport { CarouselSettings } from './components/CarouselSettings';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n  };\n\n  handleChange = (e) => {\n    const { name, value, min, max } = e.target;\n\n    let newValue = +value < +min ? +min : +value;\n\n    newValue = +value > +max ? +max : +value;\n\n    this.setState({\n      [name]: newValue,\n    });\n  };\n\n  render() {\n    const {\n      images, step, frameSize, itemWidth, animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <CarouselSettings\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          onChange={this.handleChange}\n        />\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}