{"version":3,"sources":["components/Carousel.js","App.js","index.js"],"names":["Carousel","state","currentIdx","imageCount","nextButtonDisabled","prevButtonDisabled","updateButtonsState","props","frameSize","infinite","setState","nextFrame","step","previousFrame","this","images","length","prevProps","prevState","itemWidth","animationDuration","carouselWidth","className","type","onClick","disabled","style","width","map","image","key","replace","listItemStyle","transitionDuration","transform","imgStyle","src","alt","React","Component","defaultProps","App","handleChange","e","newValue","target","name","value","min","max","htmlFor","id","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3fa6574f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Carousel.scss';\n\nclass Carousel extends React.Component {\n  state = {\n    currentIdx: 0,\n    imageCount: 0,\n    nextButtonDisabled: false,\n    prevButtonDisabled: true,\n  };\n\n  componentDidMount() {\n    const { images, infinite } = this.props;\n\n    this.setState({\n      imageCount: images.length,\n      prevButtonDisabled: !infinite,\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.frameSize !== this.props.frameSize) {\n      this.updateButtonsState();\n    }\n  }\n\n  updateButtonsState = () => {\n    const { frameSize, infinite } = this.props;\n\n    this.setState((state) => {\n      const nextButtonDisabled = !infinite\n        && state.currentIdx === state.imageCount - frameSize;\n\n      const prevButtonDisabled = !infinite\n        && state.currentIdx <= 0;\n\n      return {\n        nextButtonDisabled,\n        prevButtonDisabled,\n      };\n    });\n  };\n\n  nextFrame = () => {\n    const { step, frameSize } = this.props;\n\n    this.setState((state) => {\n      let currentIdx = state.currentIdx + step;\n\n      if (currentIdx >= (state.imageCount - frameSize)) {\n        currentIdx = state.imageCount - frameSize;\n      }\n\n      return {\n        currentIdx,\n      };\n    });\n\n    this.updateButtonsState();\n  };\n\n  previousFrame = () => {\n    const { step } = this.props;\n\n    this.setState((state) => {\n      const currentIdx = state.currentIdx === 0\n        ? state.currentIdx\n        : state.currentIdx - step;\n\n      return {\n        currentIdx: currentIdx < 0 ? 0 : currentIdx,\n      };\n    });\n\n    this.updateButtonsState();\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      animationDuration,\n    } = this.props;\n\n    const {\n      currentIdx,\n      nextButtonDisabled,\n      prevButtonDisabled,\n    } = this.state;\n\n    const carouselWidth = itemWidth * (\n      images.length < frameSize ? images.length : frameSize\n    );\n\n    return (\n      <div className=\"CarouselContainer\">\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          onClick={this.previousFrame}\n          disabled={prevButtonDisabled}\n        >\n          Prev\n        </button>\n\n        <div className=\"Carousel\" style={{ width: carouselWidth }}>\n          <ul\n            className=\"Carousel__list\"\n          >\n            {\n              images.map((image) => {\n                const key = +image.replace(/\\D/g, '');\n                const listItemStyle = {\n                  transitionDuration: `${animationDuration}ms`,\n                  transform: `translateX(-${currentIdx * itemWidth}px)`,\n                };\n                const imgStyle = {\n                  width: `${itemWidth}px`,\n                };\n\n                return (\n                  <li\n                    key={key}\n                    className=\"Carousel__item\"\n                    style={listItemStyle}\n                  >\n                    <img\n                      className=\"Carousel__image\"\n                      src={image}\n                      alt={key}\n                      style={imgStyle}\n                    />\n                  </li>\n                );\n              })\n            }\n          </ul>\n        </div>\n\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          onClick={this.nextFrame}\n          disabled={nextButtonDisabled}\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.string).isRequired,\n  itemWidth: PropTypes.number,\n  frameSize: PropTypes.number,\n  step: PropTypes.number,\n  animationDuration: PropTypes.number,\n  infinite: PropTypes.bool,\n};\n\nCarousel.defaultProps = {\n  itemWidth: 130,\n  frameSize: 3,\n  step: 3,\n  animationDuration: 1000,\n  infinite: false,\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\n\nimport Carousel from './components/Carousel';\n\nclass App extends React.Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n  };\n\n  handleChange = (e) => {\n    const { name, value, min, max } = e.target;\n\n    let newValue = +value < +min ? +min : +value;\n\n    newValue = +value > +max ? +max : +value;\n\n    this.setState({\n      [name]: newValue,\n    });\n  };\n\n  render() {\n    const {\n      images, step, frameSize, itemWidth, animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <form className=\"App__form\">\n          <div className=\"App__form-field\">\n            <label htmlFor=\"step\">Step</label>\n            <input\n              type=\"number\"\n              id=\"step\"\n              name=\"step\"\n              value={step}\n              min=\"1\"\n              max=\"10\"\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div className=\"App__form-field\">\n            <label htmlFor=\"frameSize\">Frame Size</label>\n            <input\n              type=\"number\"\n              id=\"frameSize\"\n              name=\"frameSize\"\n              value={frameSize}\n              min=\"1\"\n              max=\"10\"\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div className=\"App__form-field\">\n            <label htmlFor=\"itemWidth\">Item Width</label>\n            <input\n              type=\"number\"\n              id=\"itemWidth\"\n              name=\"itemWidth\"\n              value={itemWidth}\n              min=\"30\"\n              max=\"300\"\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div className=\"App__form-field\">\n            <label htmlFor=\"animationDuration\">Animation Duration</label>\n            <input\n              type=\"number\"\n              name=\"animationDuration\"\n              id=\"animationDuration\"\n              value={animationDuration}\n              min=\"0\"\n              max=\"3000\"\n              onChange={this.handleChange}\n            />\n          </div>\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          // infinite\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}